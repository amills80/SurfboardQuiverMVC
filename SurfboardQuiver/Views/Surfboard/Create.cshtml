@model SurfboardQuiver.Models.Surfboard

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_SurfboardLayout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container well">
        <div class="row">
            <div class="form-horizontal col-md-6">
                <h4>Add to the Rack</h4>
                <hr />
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                <div class="form-group">
                    @*<label class="control-label col-md-2">Brand</label>*@
                    @*@Html.LabelFor(model => model.Make.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.LabelFor(model => model.Make.Name, "Brand", htmlAttributes: new { @class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Make.Name, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextBox("Make.Name", null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextBox("Model", null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Shape, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Shape, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.EnumDropDownListFor(model => model.Shape, null, new { @class = "form-control" })
                        @*@Html.DropDownList("BoardShape", null, new { @class = "form-control"})*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FinSetup, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.FinSetup, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.EnumDropDownListFor(model => model.FinSetup, null, new { @class = "form-control" })
                        @*@Html.DropDownList("FinSetup", null, new { @class = "form-control"})*@
                    </div>
                </div>

                @{
                    //Use string.indexOf to ID the character  that separates feet from inches. Parse string into both, and formulate the total float val
                    //if (Model.Length.ToString().Contains('\'') && Model.Length != null)
                    //{
                    //    var convertLength = Model.Length.ToString().Remove(' ');
                    //    var splitLength = convertLength.IndexOf('\'');
                    //    var feetLength = convertLength.Substring(0, splitLength);
                    //    var inchesLength = convertLength.Substring('\'');
                    //    // TODO: refactor this validation method
                    //    string result = feetLength + "." + (float.Parse(inchesLength)/12).ToString();
                    //    Model.Length = float.Parse(result);
                    //}
                    //else
                    //{
                    //    var formattedLength = Model.Length;
                    //}
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextBox("Length", null, new { @class = "form-control" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextBox("Width", null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextBox("Rating", null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextArea("Description", null, 14, 20, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        @*//// TODO: find HTML helper (with validation for .jpg only) to implement a jpg upload section*@

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>

            <div class="container">
                <div class="col-md-4 ">
                    <img src="~/images/quiver.jpg" alt="Surfboard Rack" class="img-thumbnail img-rounded float-right" />
                </div>

                <div class="col-md-4 ">
                    <img src="~/images/quiver2.jpg" alt="Surfboard Rack" class="img-thumbnail img-rounded float-right" />
                </div>

                <div class="col-md-4 ">
                    <img src="~/images/quiver3.jpg" alt="Surfboard Fins" class="img-thumbnail img-rounded float-right" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
