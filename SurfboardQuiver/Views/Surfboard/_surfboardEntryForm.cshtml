@model SurfboardQuiver.Models.Surfboard

@*@Html.ValidationSummary("The following errors were found:", new { @class = "alert alert-danger" })*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @*@Html.ValidationSummary(null, new { @class = "alert-danger" })*@

    <div class="container well">
        <div class="row">
            <div class="form-horizontal col-md-6">
                <h4>Add to the Rack</h4>
                <hr />
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Make.Name, "Brand", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @*@Html.EditorFor(model => model.Make.Name, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextBox("Make.Name", null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @*@Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextBox("Model", null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Shape, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @*@Html.EditorFor(model => model.Shape, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.EnumDropDownListFor(model => model.Shape, "", new { @class = "form-control" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FinSetup, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @*@Html.EditorFor(model => model.FinSetup, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.EnumDropDownListFor(model => model.FinSetup, "", new { @class = "form-control" })

                    </div>
                </div>

                @{
                    //Use string.indexOf to ID the character  that separates feet from inches. Parse string into both, and formulate the total float val
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextBox("Length", null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextBox("Width", null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextBox("Rating", null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextArea("Description", null, 14, 20, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        @*//// TODO: find HTML helper (with validation for .jpg only) to implement a jpg upload section*@

                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>

            <div class="container">
                <div class="col-md-4 ">
                    <img src="~/images/quiver.jpg" alt="Surfboard Rack" class="img-thumbnail img-rounded float-right" />
                </div>
                <div class="col-md-4 ">
                    <img src="~/images/quiver2.jpg" alt="Surfboard Rack" class="img-thumbnail img-rounded float-right" />
                </div>
                <div class="col-md-4 ">
                    <img src="~/images/quiver3.jpg" alt="Surfboard Fins" class="img-thumbnail img-rounded float-right" />
                </div>
            </div>
        </div>
    </div>
}
